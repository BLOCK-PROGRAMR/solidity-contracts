{
	"id": "f2b7dfb898e5422ae037b9616867fe96",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Bank.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.22;\r\nimport \"@openzeppelin/contracts/utils/Address.sol\";\r\n\r\n\r\ncontract Bank{\r\n\r\n   using Address for address payable;\r\n   mapping (address=>uint256)public Balanceof;\r\n   function deposit()external payable {\r\n\r\n    Balanceof[msg.sender]+=msg.value;\r\n\r\n   }\r\n   function withdraw()external {\r\n\r\n    uint256 amount=Balanceof[msg.sender];\r\n    payable (msg.sender).sendValue(amount);\r\n    Balanceof[msg.sender]=0;\r\n   }\r\n}"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "london"
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220eb9f09d43144d69cbee80c69d94ee2864bd3df1b6201d620bcfb374c69b2b1b464736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220eb9f09d43144d69cbee80c69d94ee2864bd3df1b6201d620bcfb374c69b2b1b464736f6c634300081a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEB SWAP16 MULMOD 0xD4 BALANCE DIFFICULTY 0xD6 SWAP13 0xBE 0xE8 0xC PUSH10 0xD94EE2864BD3DF1B6201 0xD6 KECCAK256 0xBC 0xFB CALLDATACOPY 0x4C PUSH10 0xB2B1B464736F6C634300 ADDMOD BYTE STOP CALLER ",
							"sourceMap": "195:6066:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220eb9f09d43144d69cbee80c69d94ee2864bd3df1b6201d620bcfb374c69b2b1b464736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEB SWAP16 MULMOD 0xD4 BALANCE DIFFICULTY 0xD6 SWAP13 0xBE 0xE8 0xC PUSH10 0xD94EE2864BD3DF1B6201 0xD6 KECCAK256 0xBC 0xFB CALLDATACOPY 0x4C PUSH10 0xB2B1B464736F6C634300 ADDMOD BYTE STOP CALLER ",
							"sourceMap": "195:6066:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220eb9f09d43144d69cbee80c69d94ee2864bd3df1b6201d620bcfb374c69b2b1b464736f6c634300081a0033",
									".code": [
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/Address.sol",
								"contracts/Bank.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Bank.sol": {
				"Bank": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "Balanceof",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Bank.sol\":116:472  contract Bank{... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Bank.sol\":116:472  contract Bank{... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3ccfd60b\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x78592150\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xd0e30db0\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Bank.sol\":314:469  function withdraw()external {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_5\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_5:\n      pop\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      stop\n        /* \"contracts/Bank.sol\":176:218  mapping (address=>uint256)public Balanceof */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_8:\n      pop\n      tag_9\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      tag_12\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Bank.sol\":224:309  function deposit()external payable {... */\n    tag_4:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      stop\n        /* \"contracts/Bank.sol\":314:469  function withdraw()external {... */\n    tag_7:\n        /* \"contracts/Bank.sol\":351:365  uint256 amount */\n      0x00\n        /* \"contracts/Bank.sol\":366:375  Balanceof */\n      dup1\n        /* \"contracts/Bank.sol\":366:387  Balanceof[msg.sender] */\n      0x00\n        /* \"contracts/Bank.sol\":376:386  msg.sender */\n      caller\n        /* \"contracts/Bank.sol\":366:387  Balanceof[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Bank.sol\":351:387  uint256 amount=Balanceof[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/Bank.sol\":394:432  payable (msg.sender).sendValue(amount) */\n      tag_18\n        /* \"contracts/Bank.sol\":425:431  amount */\n      dup2\n        /* \"contracts/Bank.sol\":403:413  msg.sender */\n      caller\n        /* \"contracts/Bank.sol\":394:424  payable (msg.sender).sendValue */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_19\n      swap1\n        /* \"contracts/Bank.sol\":394:432  payable (msg.sender).sendValue(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_18:\n        /* \"contracts/Bank.sol\":461:462  0 */\n      0x00\n        /* \"contracts/Bank.sol\":439:448  Balanceof */\n      dup1\n        /* \"contracts/Bank.sol\":439:460  Balanceof[msg.sender] */\n      0x00\n        /* \"contracts/Bank.sol\":449:459  msg.sender */\n      caller\n        /* \"contracts/Bank.sol\":439:460  Balanceof[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Bank.sol\":439:462  Balanceof[msg.sender]=0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Bank.sol\":342:469  {... */\n      pop\n        /* \"contracts/Bank.sol\":314:469  function withdraw()external {... */\n      jump\t// out\n        /* \"contracts/Bank.sol\":176:218  mapping (address=>uint256)public Balanceof */\n    tag_12:\n      mstore(0x20, 0x00)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/Bank.sol\":224:309  function deposit()external payable {... */\n    tag_16:\n        /* \"contracts/Bank.sol\":291:300  msg.value */\n      callvalue\n        /* \"contracts/Bank.sol\":268:277  Balanceof */\n      0x00\n        /* \"contracts/Bank.sol\":268:289  Balanceof[msg.sender] */\n      dup1\n        /* \"contracts/Bank.sol\":278:288  msg.sender */\n      caller\n        /* \"contracts/Bank.sol\":268:289  Balanceof[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Bank.sol\":268:300  Balanceof[msg.sender]+=msg.value */\n      dup3\n      dup3\n      sload\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Bank.sol\":224:309  function deposit()external payable {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1531:1862  function sendValue(address payable recipient, uint256 amount) internal {... */\n    tag_19:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1640:1646  amount */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1616:1637  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1616:1646  address(this).balance < amount */\n      lt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1612:1721  if (address(this).balance < amount) {... */\n      iszero\n      tag_24\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1704:1708  this */\n      address\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1669:1710  AddressInsufficientBalance(address(this)) */\n      mload(0x40)\n      0xcd78605900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1612:1721  if (address(this).balance < amount) {... */\n    tag_24:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1732:1744  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1750:1759  recipient */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1750:1764  recipient.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1772:1778  amount */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1750:1783  recipient.call{value: amount}(\"\") */\n      mload(0x40)\n      tag_27\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_31\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_30)\n    tag_31:\n      0x60\n      swap2\n      pop\n    tag_30:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1731:1783  (bool success, ) = recipient.call{value: amount}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1798:1805  success */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1793:1856  if (!success) {... */\n      tag_32\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1828:1845  FailedInnerCall() */\n      mload(0x40)\n      0x1425ea4200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1793:1856  if (!success) {... */\n    tag_32:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1602:1862  {... */\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1531:1862  function sendValue(address payable recipient, uint256 amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_34:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_36:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_37:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_53\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_36\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_38:\n        /* \"#utility.yul\":641:665   */\n      tag_55\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_37\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_56\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_56:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_39:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_58\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_38\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_11:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_60\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_61\n      tag_34\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":917:1036   */\n    tag_60:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_62\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_39\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1253   */\n    tag_40:\n        /* \"#utility.yul\":1213:1220   */\n      0x00\n        /* \"#utility.yul\":1242:1247   */\n      dup2\n        /* \"#utility.yul\":1231:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1377   */\n    tag_41:\n        /* \"#utility.yul\":1346:1370   */\n      tag_65\n        /* \"#utility.yul\":1364:1369   */\n      dup2\n        /* \"#utility.yul\":1346:1370   */\n      tag_40\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":1341:1344   */\n      dup3\n        /* \"#utility.yul\":1334:1371   */\n      mstore\n        /* \"#utility.yul\":1259:1377   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1383:1605   */\n    tag_14:\n        /* \"#utility.yul\":1476:1480   */\n      0x00\n        /* \"#utility.yul\":1514:1516   */\n      0x20\n        /* \"#utility.yul\":1503:1512   */\n      dup3\n        /* \"#utility.yul\":1499:1517   */\n      add\n        /* \"#utility.yul\":1491:1517   */\n      swap1\n      pop\n        /* \"#utility.yul\":1527:1598   */\n      tag_67\n        /* \"#utility.yul\":1595:1596   */\n      0x00\n        /* \"#utility.yul\":1584:1593   */\n      dup4\n        /* \"#utility.yul\":1580:1597   */\n      add\n        /* \"#utility.yul\":1571:1577   */\n      dup5\n        /* \"#utility.yul\":1527:1598   */\n      tag_41\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":1383:1605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1791   */\n    tag_42:\n        /* \"#utility.yul\":1659:1736   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1656:1657   */\n      0x00\n        /* \"#utility.yul\":1649:1737   */\n      mstore\n        /* \"#utility.yul\":1756:1760   */\n      0x11\n        /* \"#utility.yul\":1753:1754   */\n      0x04\n        /* \"#utility.yul\":1746:1761   */\n      mstore\n        /* \"#utility.yul\":1780:1784   */\n      0x24\n        /* \"#utility.yul\":1777:1778   */\n      0x00\n        /* \"#utility.yul\":1770:1785   */\n      revert\n        /* \"#utility.yul\":1797:1988   */\n    tag_22:\n        /* \"#utility.yul\":1837:1840   */\n      0x00\n        /* \"#utility.yul\":1856:1876   */\n      tag_70\n        /* \"#utility.yul\":1874:1875   */\n      dup3\n        /* \"#utility.yul\":1856:1876   */\n      tag_40\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":1851:1876   */\n      swap2\n      pop\n        /* \"#utility.yul\":1890:1910   */\n      tag_71\n        /* \"#utility.yul\":1908:1909   */\n      dup4\n        /* \"#utility.yul\":1890:1910   */\n      tag_40\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":1885:1910   */\n      swap3\n      pop\n        /* \"#utility.yul\":1933:1934   */\n      dup3\n        /* \"#utility.yul\":1930:1931   */\n      dup3\n        /* \"#utility.yul\":1926:1935   */\n      add\n        /* \"#utility.yul\":1919:1935   */\n      swap1\n      pop\n        /* \"#utility.yul\":1954:1957   */\n      dup1\n        /* \"#utility.yul\":1951:1952   */\n      dup3\n        /* \"#utility.yul\":1948:1958   */\n      gt\n        /* \"#utility.yul\":1945:1981   */\n      iszero\n      tag_72\n      jumpi\n        /* \"#utility.yul\":1961:1979   */\n      tag_73\n      tag_42\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":1945:1981   */\n    tag_72:\n        /* \"#utility.yul\":1797:1988   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1994:2112   */\n    tag_43:\n        /* \"#utility.yul\":2081:2105   */\n      tag_75\n        /* \"#utility.yul\":2099:2104   */\n      dup2\n        /* \"#utility.yul\":2081:2105   */\n      tag_37\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":2076:2079   */\n      dup3\n        /* \"#utility.yul\":2069:2106   */\n      mstore\n        /* \"#utility.yul\":1994:2112   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2118:2340   */\n    tag_26:\n        /* \"#utility.yul\":2211:2215   */\n      0x00\n        /* \"#utility.yul\":2249:2251   */\n      0x20\n        /* \"#utility.yul\":2238:2247   */\n      dup3\n        /* \"#utility.yul\":2234:2252   */\n      add\n        /* \"#utility.yul\":2226:2252   */\n      swap1\n      pop\n        /* \"#utility.yul\":2262:2333   */\n      tag_77\n        /* \"#utility.yul\":2330:2331   */\n      0x00\n        /* \"#utility.yul\":2319:2328   */\n      dup4\n        /* \"#utility.yul\":2315:2332   */\n      add\n        /* \"#utility.yul\":2306:2312   */\n      dup5\n        /* \"#utility.yul\":2262:2333   */\n      tag_43\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":2118:2340   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2346:2493   */\n    tag_44:\n        /* \"#utility.yul\":2447:2458   */\n      0x00\n        /* \"#utility.yul\":2484:2487   */\n      dup2\n        /* \"#utility.yul\":2469:2487   */\n      swap1\n      pop\n        /* \"#utility.yul\":2346:2493   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2499:2613   */\n    tag_45:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2619:3017   */\n    tag_46:\n        /* \"#utility.yul\":2778:2781   */\n      0x00\n        /* \"#utility.yul\":2799:2882   */\n      tag_81\n        /* \"#utility.yul\":2880:2881   */\n      0x00\n        /* \"#utility.yul\":2875:2878   */\n      dup4\n        /* \"#utility.yul\":2799:2882   */\n      tag_44\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":2792:2882   */\n      swap2\n      pop\n        /* \"#utility.yul\":2891:2984   */\n      tag_82\n        /* \"#utility.yul\":2980:2983   */\n      dup3\n        /* \"#utility.yul\":2891:2984   */\n      tag_45\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":3009:3010   */\n      0x00\n        /* \"#utility.yul\":3004:3007   */\n      dup3\n        /* \"#utility.yul\":3000:3011   */\n      add\n        /* \"#utility.yul\":2993:3011   */\n      swap1\n      pop\n        /* \"#utility.yul\":2619:3017   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3023:3402   */\n    tag_28:\n        /* \"#utility.yul\":3207:3210   */\n      0x00\n        /* \"#utility.yul\":3229:3376   */\n      tag_84\n        /* \"#utility.yul\":3372:3375   */\n      dup3\n        /* \"#utility.yul\":3229:3376   */\n      tag_46\n      jump\t// in\n    tag_84:\n        /* \"#utility.yul\":3222:3376   */\n      swap2\n      pop\n        /* \"#utility.yul\":3393:3396   */\n      dup2\n        /* \"#utility.yul\":3386:3396   */\n      swap1\n      pop\n        /* \"#utility.yul\":3023:3402   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212203e412ff92261df0ff4bb9c7fb8433085e4d18de7397731df48c64be03ee3e69a64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b506104738061001f6000396000f3fe6080604052600436106100345760003560e01c80633ccfd60b146100395780637859215014610050578063d0e30db01461008d575b600080fd5b34801561004557600080fd5b5061004e610097565b005b34801561005c57600080fd5b5061007760048036038101906100729190610309565b61014a565b604051610084919061034f565b60405180910390f35b610095610162565b005b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050610103813373ffffffffffffffffffffffffffffffffffffffff166101b990919063ffffffff16565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b60006020528060005260406000206000915090505481565b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546101b09190610399565b92505081905550565b804710156101fe57306040517fcd7860590000000000000000000000000000000000000000000000000000000081526004016101f591906103dc565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff168260405161022490610428565b60006040518083038185875af1925050503d8060008114610261576040519150601f19603f3d011682016040523d82523d6000602084013e610266565b606091505b50509050806102a1576040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102d6826102ab565b9050919050565b6102e6816102cb565b81146102f157600080fd5b50565b600081359050610303816102dd565b92915050565b60006020828403121561031f5761031e6102a6565b5b600061032d848285016102f4565b91505092915050565b6000819050919050565b61034981610336565b82525050565b60006020820190506103646000830184610340565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006103a482610336565b91506103af83610336565b92508282019050808211156103c7576103c661036a565b5b92915050565b6103d6816102cb565b82525050565b60006020820190506103f160008301846103cd565b92915050565b600081905092915050565b50565b60006104126000836103f7565b915061041d82610402565b600082019050919050565b600061043382610405565b915081905091905056fea26469706673582212203e412ff92261df0ff4bb9c7fb8433085e4d18de7397731df48c64be03ee3e69a64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x473 DUP1 PUSH2 0x1F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x39 JUMPI DUP1 PUSH4 0x78592150 EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x8D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E PUSH2 0x97 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x77 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x72 SWAP2 SWAP1 PUSH2 0x309 JUMP JUMPDEST PUSH2 0x14A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x84 SWAP2 SWAP1 PUSH2 0x34F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x95 PUSH2 0x162 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH2 0x103 DUP2 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1B9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST CALLVALUE PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1B0 SWAP2 SWAP1 PUSH2 0x399 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x1FE JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F5 SWAP2 SWAP1 PUSH2 0x3DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x224 SWAP1 PUSH2 0x428 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x261 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x266 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x2A1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D6 DUP3 PUSH2 0x2AB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2E6 DUP2 PUSH2 0x2CB JUMP JUMPDEST DUP2 EQ PUSH2 0x2F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x303 DUP2 PUSH2 0x2DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x31F JUMPI PUSH2 0x31E PUSH2 0x2A6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x32D DUP5 DUP3 DUP6 ADD PUSH2 0x2F4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x349 DUP2 PUSH2 0x336 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x364 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x340 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3A4 DUP3 PUSH2 0x336 JUMP JUMPDEST SWAP2 POP PUSH2 0x3AF DUP4 PUSH2 0x336 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x3C7 JUMPI PUSH2 0x3C6 PUSH2 0x36A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3D6 DUP2 PUSH2 0x2CB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3F1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3CD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x412 PUSH1 0x0 DUP4 PUSH2 0x3F7 JUMP JUMPDEST SWAP2 POP PUSH2 0x41D DUP3 PUSH2 0x402 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x433 DUP3 PUSH2 0x405 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY COINBASE 0x2F 0xF9 0x22 PUSH2 0xDF0F DELEGATECALL 0xBB SWAP13 PUSH32 0xB8433085E4D18DE7397731DF48C64BE03EE3E69A64736F6C634300081A003300 ",
							"sourceMap": "116:356:1:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@Balanceof_262": {
									"entryPoint": 330,
									"id": 262,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@deposit_274": {
									"entryPoint": 354,
									"id": 274,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sendValue_56": {
									"entryPoint": 441,
									"id": 56,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@withdraw_301": {
									"entryPoint": 151,
									"id": 301,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 756,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 777,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 973,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 1029,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 832,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 1064,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 988,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 847,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 1015,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 921,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 715,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 683,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 822,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 874,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 678,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 1026,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 733,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3405:2",
										"nodeType": "YulBlock",
										"src": "0:3405:2",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:2",
													"nodeType": "YulBlock",
													"src": "47:35:2",
													"statements": [
														{
															"nativeSrc": "57:19:2",
															"nodeType": "YulAssignment",
															"src": "57:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:2",
																		"nodeType": "YulLiteral",
																		"src": "73:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:2"
																},
																"nativeSrc": "67:9:2",
																"nodeType": "YulFunctionCall",
																"src": "67:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:2",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:2",
														"nodeType": "YulTypedName",
														"src": "40:6:2",
														"type": ""
													}
												],
												"src": "7:75:2"
											},
											{
												"body": {
													"nativeSrc": "177:28:2",
													"nodeType": "YulBlock",
													"src": "177:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:2",
																		"nodeType": "YulLiteral",
																		"src": "194:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:2",
																		"nodeType": "YulLiteral",
																		"src": "197:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:2"
																},
																"nativeSrc": "187:12:2",
																"nodeType": "YulFunctionCall",
																"src": "187:12:2"
															},
															"nativeSrc": "187:12:2",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:2",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:2"
											},
											{
												"body": {
													"nativeSrc": "300:28:2",
													"nodeType": "YulBlock",
													"src": "300:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:2",
																		"nodeType": "YulLiteral",
																		"src": "317:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:2",
																		"nodeType": "YulLiteral",
																		"src": "320:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:2"
																},
																"nativeSrc": "310:12:2",
																"nodeType": "YulFunctionCall",
																"src": "310:12:2"
															},
															"nativeSrc": "310:12:2",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:2",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:2"
											},
											{
												"body": {
													"nativeSrc": "379:81:2",
													"nodeType": "YulBlock",
													"src": "379:81:2",
													"statements": [
														{
															"nativeSrc": "389:65:2",
															"nodeType": "YulAssignment",
															"src": "389:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:2",
																		"nodeType": "YulLiteral",
																		"src": "411:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:2"
																},
																"nativeSrc": "400:54:2",
																"nodeType": "YulFunctionCall",
																"src": "400:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:2",
														"nodeType": "YulTypedName",
														"src": "361:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:2",
														"nodeType": "YulTypedName",
														"src": "371:7:2",
														"type": ""
													}
												],
												"src": "334:126:2"
											},
											{
												"body": {
													"nativeSrc": "511:51:2",
													"nodeType": "YulBlock",
													"src": "511:51:2",
													"statements": [
														{
															"nativeSrc": "521:35:2",
															"nodeType": "YulAssignment",
															"src": "521:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:2",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:2"
																},
																"nativeSrc": "532:24:2",
																"nodeType": "YulFunctionCall",
																"src": "532:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:2",
														"nodeType": "YulTypedName",
														"src": "493:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:2",
														"nodeType": "YulTypedName",
														"src": "503:7:2",
														"type": ""
													}
												],
												"src": "466:96:2"
											},
											{
												"body": {
													"nativeSrc": "611:79:2",
													"nodeType": "YulBlock",
													"src": "611:79:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:2",
																"nodeType": "YulBlock",
																"src": "668:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:2",
																					"nodeType": "YulLiteral",
																					"src": "677:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:2",
																					"nodeType": "YulLiteral",
																					"src": "680:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:2"
																			},
																			"nativeSrc": "670:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:2"
																		},
																		"nativeSrc": "670:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:2",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:2",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:2"
																				},
																				"nativeSrc": "641:24:2",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:2"
																		},
																		"nativeSrc": "631:35:2",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:2"
																},
																"nativeSrc": "624:43:2",
																"nodeType": "YulFunctionCall",
																"src": "624:43:2"
															},
															"nativeSrc": "621:63:2",
															"nodeType": "YulIf",
															"src": "621:63:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:2",
														"nodeType": "YulTypedName",
														"src": "604:5:2",
														"type": ""
													}
												],
												"src": "568:122:2"
											},
											{
												"body": {
													"nativeSrc": "748:87:2",
													"nodeType": "YulBlock",
													"src": "748:87:2",
													"statements": [
														{
															"nativeSrc": "758:29:2",
															"nodeType": "YulAssignment",
															"src": "758:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:2",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:2"
																},
																"nativeSrc": "767:20:2",
																"nodeType": "YulFunctionCall",
																"src": "767:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:2",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:2"
																},
																"nativeSrc": "796:33:2",
																"nodeType": "YulFunctionCall",
																"src": "796:33:2"
															},
															"nativeSrc": "796:33:2",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:2"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:2",
														"nodeType": "YulTypedName",
														"src": "726:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:2",
														"nodeType": "YulTypedName",
														"src": "734:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:2",
														"nodeType": "YulTypedName",
														"src": "742:5:2",
														"type": ""
													}
												],
												"src": "696:139:2"
											},
											{
												"body": {
													"nativeSrc": "907:263:2",
													"nodeType": "YulBlock",
													"src": "907:263:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "953:83:2",
																"nodeType": "YulBlock",
																"src": "953:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "955:77:2",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:2"
																			},
																			"nativeSrc": "955:79:2",
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:2"
																		},
																		"nativeSrc": "955:79:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "928:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "937:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "924:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:2"
																		},
																		"nativeSrc": "924:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "949:2:2",
																		"nodeType": "YulLiteral",
																		"src": "949:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "920:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:2"
																},
																"nativeSrc": "920:32:2",
																"nodeType": "YulFunctionCall",
																"src": "920:32:2"
															},
															"nativeSrc": "917:119:2",
															"nodeType": "YulIf",
															"src": "917:119:2"
														},
														{
															"nativeSrc": "1046:117:2",
															"nodeType": "YulBlock",
															"src": "1046:117:2",
															"statements": [
																{
																	"nativeSrc": "1061:15:2",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:2",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1075:1:2",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1065:6:2",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1090:63:2",
																	"nodeType": "YulAssignment",
																	"src": "1090:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1125:9:2",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:2"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1136:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1121:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:2"
																				},
																				"nativeSrc": "1121:22:2",
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1145:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1100:20:2",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:2"
																		},
																		"nativeSrc": "1100:53:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1090:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "841:329:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "877:9:2",
														"nodeType": "YulTypedName",
														"src": "877:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "888:7:2",
														"nodeType": "YulTypedName",
														"src": "888:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "900:6:2",
														"nodeType": "YulTypedName",
														"src": "900:6:2",
														"type": ""
													}
												],
												"src": "841:329:2"
											},
											{
												"body": {
													"nativeSrc": "1221:32:2",
													"nodeType": "YulBlock",
													"src": "1221:32:2",
													"statements": [
														{
															"nativeSrc": "1231:16:2",
															"nodeType": "YulAssignment",
															"src": "1231:16:2",
															"value": {
																"name": "value",
																"nativeSrc": "1242:5:2",
																"nodeType": "YulIdentifier",
																"src": "1242:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1231:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "1231:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1176:77:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1203:5:2",
														"nodeType": "YulTypedName",
														"src": "1203:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1213:7:2",
														"nodeType": "YulTypedName",
														"src": "1213:7:2",
														"type": ""
													}
												],
												"src": "1176:77:2"
											},
											{
												"body": {
													"nativeSrc": "1324:53:2",
													"nodeType": "YulBlock",
													"src": "1324:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1341:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "1341:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1364:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "1364:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1346:17:2",
																			"nodeType": "YulIdentifier",
																			"src": "1346:17:2"
																		},
																		"nativeSrc": "1346:24:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1346:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1334:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:2"
																},
																"nativeSrc": "1334:37:2",
																"nodeType": "YulFunctionCall",
																"src": "1334:37:2"
															},
															"nativeSrc": "1334:37:2",
															"nodeType": "YulExpressionStatement",
															"src": "1334:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1259:118:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1312:5:2",
														"nodeType": "YulTypedName",
														"src": "1312:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1319:3:2",
														"nodeType": "YulTypedName",
														"src": "1319:3:2",
														"type": ""
													}
												],
												"src": "1259:118:2"
											},
											{
												"body": {
													"nativeSrc": "1481:124:2",
													"nodeType": "YulBlock",
													"src": "1481:124:2",
													"statements": [
														{
															"nativeSrc": "1491:26:2",
															"nodeType": "YulAssignment",
															"src": "1491:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1503:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "1503:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1514:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1514:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1499:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1499:3:2"
																},
																"nativeSrc": "1499:18:2",
																"nodeType": "YulFunctionCall",
																"src": "1499:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1491:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "1491:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1571:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "1571:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1584:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "1584:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1595:1:2",
																				"nodeType": "YulLiteral",
																				"src": "1595:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1580:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1580:3:2"
																		},
																		"nativeSrc": "1580:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1580:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1527:43:2",
																	"nodeType": "YulIdentifier",
																	"src": "1527:43:2"
																},
																"nativeSrc": "1527:71:2",
																"nodeType": "YulFunctionCall",
																"src": "1527:71:2"
															},
															"nativeSrc": "1527:71:2",
															"nodeType": "YulExpressionStatement",
															"src": "1527:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1383:222:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1453:9:2",
														"nodeType": "YulTypedName",
														"src": "1453:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1465:6:2",
														"nodeType": "YulTypedName",
														"src": "1465:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1476:4:2",
														"nodeType": "YulTypedName",
														"src": "1476:4:2",
														"type": ""
													}
												],
												"src": "1383:222:2"
											},
											{
												"body": {
													"nativeSrc": "1639:152:2",
													"nodeType": "YulBlock",
													"src": "1639:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1656:1:2",
																		"nodeType": "YulLiteral",
																		"src": "1656:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1659:77:2",
																		"nodeType": "YulLiteral",
																		"src": "1659:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1649:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1649:6:2"
																},
																"nativeSrc": "1649:88:2",
																"nodeType": "YulFunctionCall",
																"src": "1649:88:2"
															},
															"nativeSrc": "1649:88:2",
															"nodeType": "YulExpressionStatement",
															"src": "1649:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1753:1:2",
																		"nodeType": "YulLiteral",
																		"src": "1753:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1756:4:2",
																		"nodeType": "YulLiteral",
																		"src": "1756:4:2",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1746:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1746:6:2"
																},
																"nativeSrc": "1746:15:2",
																"nodeType": "YulFunctionCall",
																"src": "1746:15:2"
															},
															"nativeSrc": "1746:15:2",
															"nodeType": "YulExpressionStatement",
															"src": "1746:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1777:1:2",
																		"nodeType": "YulLiteral",
																		"src": "1777:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1780:4:2",
																		"nodeType": "YulLiteral",
																		"src": "1780:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1770:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1770:6:2"
																},
																"nativeSrc": "1770:15:2",
																"nodeType": "YulFunctionCall",
																"src": "1770:15:2"
															},
															"nativeSrc": "1770:15:2",
															"nodeType": "YulExpressionStatement",
															"src": "1770:15:2"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "1611:180:2",
												"nodeType": "YulFunctionDefinition",
												"src": "1611:180:2"
											},
											{
												"body": {
													"nativeSrc": "1841:147:2",
													"nodeType": "YulBlock",
													"src": "1841:147:2",
													"statements": [
														{
															"nativeSrc": "1851:25:2",
															"nodeType": "YulAssignment",
															"src": "1851:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "1874:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "1874:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1856:17:2",
																	"nodeType": "YulIdentifier",
																	"src": "1856:17:2"
																},
																"nativeSrc": "1856:20:2",
																"nodeType": "YulFunctionCall",
																"src": "1856:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "1851:1:2",
																	"nodeType": "YulIdentifier",
																	"src": "1851:1:2"
																}
															]
														},
														{
															"nativeSrc": "1885:25:2",
															"nodeType": "YulAssignment",
															"src": "1885:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "1908:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "1908:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1890:17:2",
																	"nodeType": "YulIdentifier",
																	"src": "1890:17:2"
																},
																"nativeSrc": "1890:20:2",
																"nodeType": "YulFunctionCall",
																"src": "1890:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "1885:1:2",
																	"nodeType": "YulIdentifier",
																	"src": "1885:1:2"
																}
															]
														},
														{
															"nativeSrc": "1919:16:2",
															"nodeType": "YulAssignment",
															"src": "1919:16:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "1930:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "1930:1:2"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "1933:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "1933:1:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1926:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1926:3:2"
																},
																"nativeSrc": "1926:9:2",
																"nodeType": "YulFunctionCall",
																"src": "1926:9:2"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "1919:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1919:3:2"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1959:22:2",
																"nodeType": "YulBlock",
																"src": "1959:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "1961:16:2",
																				"nodeType": "YulIdentifier",
																				"src": "1961:16:2"
																			},
																			"nativeSrc": "1961:18:2",
																			"nodeType": "YulFunctionCall",
																			"src": "1961:18:2"
																		},
																		"nativeSrc": "1961:18:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "1961:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "1951:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "1951:1:2"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "1954:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "1954:3:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1948:2:2",
																	"nodeType": "YulIdentifier",
																	"src": "1948:2:2"
																},
																"nativeSrc": "1948:10:2",
																"nodeType": "YulFunctionCall",
																"src": "1948:10:2"
															},
															"nativeSrc": "1945:36:2",
															"nodeType": "YulIf",
															"src": "1945:36:2"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "1797:191:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "1828:1:2",
														"nodeType": "YulTypedName",
														"src": "1828:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "1831:1:2",
														"nodeType": "YulTypedName",
														"src": "1831:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "1837:3:2",
														"nodeType": "YulTypedName",
														"src": "1837:3:2",
														"type": ""
													}
												],
												"src": "1797:191:2"
											},
											{
												"body": {
													"nativeSrc": "2059:53:2",
													"nodeType": "YulBlock",
													"src": "2059:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2076:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "2076:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2099:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "2099:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2081:17:2",
																			"nodeType": "YulIdentifier",
																			"src": "2081:17:2"
																		},
																		"nativeSrc": "2081:24:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2081:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2069:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2069:6:2"
																},
																"nativeSrc": "2069:37:2",
																"nodeType": "YulFunctionCall",
																"src": "2069:37:2"
															},
															"nativeSrc": "2069:37:2",
															"nodeType": "YulExpressionStatement",
															"src": "2069:37:2"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1994:118:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2047:5:2",
														"nodeType": "YulTypedName",
														"src": "2047:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2054:3:2",
														"nodeType": "YulTypedName",
														"src": "2054:3:2",
														"type": ""
													}
												],
												"src": "1994:118:2"
											},
											{
												"body": {
													"nativeSrc": "2216:124:2",
													"nodeType": "YulBlock",
													"src": "2216:124:2",
													"statements": [
														{
															"nativeSrc": "2226:26:2",
															"nodeType": "YulAssignment",
															"src": "2226:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2238:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "2238:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2249:2:2",
																		"nodeType": "YulLiteral",
																		"src": "2249:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2234:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2234:3:2"
																},
																"nativeSrc": "2234:18:2",
																"nodeType": "YulFunctionCall",
																"src": "2234:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2226:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "2226:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2306:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "2306:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2319:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "2319:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2330:1:2",
																				"nodeType": "YulLiteral",
																				"src": "2330:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2315:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "2315:3:2"
																		},
																		"nativeSrc": "2315:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2315:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2262:43:2",
																	"nodeType": "YulIdentifier",
																	"src": "2262:43:2"
																},
																"nativeSrc": "2262:71:2",
																"nodeType": "YulFunctionCall",
																"src": "2262:71:2"
															},
															"nativeSrc": "2262:71:2",
															"nodeType": "YulExpressionStatement",
															"src": "2262:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2118:222:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2188:9:2",
														"nodeType": "YulTypedName",
														"src": "2188:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2200:6:2",
														"nodeType": "YulTypedName",
														"src": "2200:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2211:4:2",
														"nodeType": "YulTypedName",
														"src": "2211:4:2",
														"type": ""
													}
												],
												"src": "2118:222:2"
											},
											{
												"body": {
													"nativeSrc": "2459:34:2",
													"nodeType": "YulBlock",
													"src": "2459:34:2",
													"statements": [
														{
															"nativeSrc": "2469:18:2",
															"nodeType": "YulAssignment",
															"src": "2469:18:2",
															"value": {
																"name": "pos",
																"nativeSrc": "2484:3:2",
																"nodeType": "YulIdentifier",
																"src": "2484:3:2"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "2469:11:2",
																	"nodeType": "YulIdentifier",
																	"src": "2469:11:2"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "2346:147:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2431:3:2",
														"nodeType": "YulTypedName",
														"src": "2431:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2436:6:2",
														"nodeType": "YulTypedName",
														"src": "2436:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "2447:11:2",
														"nodeType": "YulTypedName",
														"src": "2447:11:2",
														"type": ""
													}
												],
												"src": "2346:147:2"
											},
											{
												"body": {
													"nativeSrc": "2605:8:2",
													"nodeType": "YulBlock",
													"src": "2605:8:2",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nativeSrc": "2499:114:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "2597:6:2",
														"nodeType": "YulTypedName",
														"src": "2597:6:2",
														"type": ""
													}
												],
												"src": "2499:114:2"
											},
											{
												"body": {
													"nativeSrc": "2782:235:2",
													"nodeType": "YulBlock",
													"src": "2782:235:2",
													"statements": [
														{
															"nativeSrc": "2792:90:2",
															"nodeType": "YulAssignment",
															"src": "2792:90:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2875:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "2875:3:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2880:1:2",
																		"nodeType": "YulLiteral",
																		"src": "2880:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "2799:75:2",
																	"nodeType": "YulIdentifier",
																	"src": "2799:75:2"
																},
																"nativeSrc": "2799:83:2",
																"nodeType": "YulFunctionCall",
																"src": "2799:83:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2792:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2792:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2980:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "2980:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nativeSrc": "2891:88:2",
																	"nodeType": "YulIdentifier",
																	"src": "2891:88:2"
																},
																"nativeSrc": "2891:93:2",
																"nodeType": "YulFunctionCall",
																"src": "2891:93:2"
															},
															"nativeSrc": "2891:93:2",
															"nodeType": "YulExpressionStatement",
															"src": "2891:93:2"
														},
														{
															"nativeSrc": "2993:18:2",
															"nodeType": "YulAssignment",
															"src": "2993:18:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3004:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "3004:3:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3009:1:2",
																		"nodeType": "YulLiteral",
																		"src": "3009:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3000:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "3000:3:2"
																},
																"nativeSrc": "3000:11:2",
																"nodeType": "YulFunctionCall",
																"src": "3000:11:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2993:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2993:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "2619:398:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2770:3:2",
														"nodeType": "YulTypedName",
														"src": "2770:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2778:3:2",
														"nodeType": "YulTypedName",
														"src": "2778:3:2",
														"type": ""
													}
												],
												"src": "2619:398:2"
											},
											{
												"body": {
													"nativeSrc": "3211:191:2",
													"nodeType": "YulBlock",
													"src": "3211:191:2",
													"statements": [
														{
															"nativeSrc": "3222:154:2",
															"nodeType": "YulAssignment",
															"src": "3222:154:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3372:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "3372:3:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "3229:141:2",
																	"nodeType": "YulIdentifier",
																	"src": "3229:141:2"
																},
																"nativeSrc": "3229:147:2",
																"nodeType": "YulFunctionCall",
																"src": "3229:147:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3222:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "3222:3:2"
																}
															]
														},
														{
															"nativeSrc": "3386:10:2",
															"nodeType": "YulAssignment",
															"src": "3386:10:2",
															"value": {
																"name": "pos",
																"nativeSrc": "3393:3:2",
																"nodeType": "YulIdentifier",
																"src": "3393:3:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3386:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "3386:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "3023:379:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3198:3:2",
														"nodeType": "YulTypedName",
														"src": "3198:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3207:3:2",
														"nodeType": "YulTypedName",
														"src": "3207:3:2",
														"type": ""
													}
												],
												"src": "3023:379:2"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100345760003560e01c80633ccfd60b146100395780637859215014610050578063d0e30db01461008d575b600080fd5b34801561004557600080fd5b5061004e610097565b005b34801561005c57600080fd5b5061007760048036038101906100729190610309565b61014a565b604051610084919061034f565b60405180910390f35b610095610162565b005b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050610103813373ffffffffffffffffffffffffffffffffffffffff166101b990919063ffffffff16565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b60006020528060005260406000206000915090505481565b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546101b09190610399565b92505081905550565b804710156101fe57306040517fcd7860590000000000000000000000000000000000000000000000000000000081526004016101f591906103dc565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff168260405161022490610428565b60006040518083038185875af1925050503d8060008114610261576040519150601f19603f3d011682016040523d82523d6000602084013e610266565b606091505b50509050806102a1576040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102d6826102ab565b9050919050565b6102e6816102cb565b81146102f157600080fd5b50565b600081359050610303816102dd565b92915050565b60006020828403121561031f5761031e6102a6565b5b600061032d848285016102f4565b91505092915050565b6000819050919050565b61034981610336565b82525050565b60006020820190506103646000830184610340565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006103a482610336565b91506103af83610336565b92508282019050808211156103c7576103c661036a565b5b92915050565b6103d6816102cb565b82525050565b60006020820190506103f160008301846103cd565b92915050565b600081905092915050565b50565b60006104126000836103f7565b915061041d82610402565b600082019050919050565b600061043382610405565b915081905091905056fea26469706673582212203e412ff92261df0ff4bb9c7fb8433085e4d18de7397731df48c64be03ee3e69a64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x39 JUMPI DUP1 PUSH4 0x78592150 EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x8D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E PUSH2 0x97 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x77 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x72 SWAP2 SWAP1 PUSH2 0x309 JUMP JUMPDEST PUSH2 0x14A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x84 SWAP2 SWAP1 PUSH2 0x34F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x95 PUSH2 0x162 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH2 0x103 DUP2 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1B9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST CALLVALUE PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1B0 SWAP2 SWAP1 PUSH2 0x399 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x1FE JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F5 SWAP2 SWAP1 PUSH2 0x3DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x224 SWAP1 PUSH2 0x428 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x261 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x266 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x2A1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D6 DUP3 PUSH2 0x2AB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2E6 DUP2 PUSH2 0x2CB JUMP JUMPDEST DUP2 EQ PUSH2 0x2F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x303 DUP2 PUSH2 0x2DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x31F JUMPI PUSH2 0x31E PUSH2 0x2A6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x32D DUP5 DUP3 DUP6 ADD PUSH2 0x2F4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x349 DUP2 PUSH2 0x336 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x364 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x340 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3A4 DUP3 PUSH2 0x336 JUMP JUMPDEST SWAP2 POP PUSH2 0x3AF DUP4 PUSH2 0x336 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x3C7 JUMPI PUSH2 0x3C6 PUSH2 0x36A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3D6 DUP2 PUSH2 0x2CB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3F1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3CD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x412 PUSH1 0x0 DUP4 PUSH2 0x3F7 JUMP JUMPDEST SWAP2 POP PUSH2 0x41D DUP3 PUSH2 0x402 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x433 DUP3 PUSH2 0x405 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY COINBASE 0x2F 0xF9 0x22 PUSH2 0xDF0F DELEGATECALL 0xBB SWAP13 PUSH32 0xB8433085E4D18DE7397731DF48C64BE03EE3E69A64736F6C634300081A003300 ",
							"sourceMap": "116:356:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;314:155;;;;;;;;;;;;;:::i;:::-;;176:42;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;224:85;;;:::i;:::-;;314:155;351:14;366:9;:21;376:10;366:21;;;;;;;;;;;;;;;;351:36;;394:38;425:6;403:10;394:30;;;;:38;;;;:::i;:::-;461:1;439:9;:21;449:10;439:21;;;;;;;;;;;;;;;:23;;;;342:127;314:155::o;176:42::-;;;;;;;;;;;;;;;;;:::o;224:85::-;291:9;268;:21;278:10;268:21;;;;;;;;;;;;;;;;:32;;;;;;;:::i;:::-;;;;;;;;224:85::o;1531:331:0:-;1640:6;1616:21;:30;1612:109;;;1704:4;1669:41;;;;;;;;;;;:::i;:::-;;;;;;;;1612:109;1732:12;1750:9;:14;;1772:6;1750:33;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1731:52;;;1798:7;1793:63;;1828:17;;;;;;;;;;;;;;1793:63;1602:260;1531:331;;:::o;88:117:2:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:222::-;1476:4;1514:2;1503:9;1499:18;1491:26;;1527:71;1595:1;1584:9;1580:17;1571:6;1527:71;:::i;:::-;1383:222;;;;:::o;1611:180::-;1659:77;1656:1;1649:88;1756:4;1753:1;1746:15;1780:4;1777:1;1770:15;1797:191;1837:3;1856:20;1874:1;1856:20;:::i;:::-;1851:25;;1890:20;1908:1;1890:20;:::i;:::-;1885:25;;1933:1;1930;1926:9;1919:16;;1954:3;1951:1;1948:10;1945:36;;;1961:18;;:::i;:::-;1945:36;1797:191;;;;:::o;1994:118::-;2081:24;2099:5;2081:24;:::i;:::-;2076:3;2069:37;1994:118;;:::o;2118:222::-;2211:4;2249:2;2238:9;2234:18;2226:26;;2262:71;2330:1;2319:9;2315:17;2306:6;2262:71;:::i;:::-;2118:222;;;;:::o;2346:147::-;2447:11;2484:3;2469:18;;2346:147;;;;:::o;2499:114::-;;:::o;2619:398::-;2778:3;2799:83;2880:1;2875:3;2799:83;:::i;:::-;2792:90;;2891:93;2980:3;2891:93;:::i;:::-;3009:1;3004:3;3000:11;2993:18;;2619:398;;;:::o;3023:379::-;3207:3;3229:147;3372:3;3229:147;:::i;:::-;3222:154;;3393:3;3386:10;;3023:379;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "227800",
								"executionCost": "269",
								"totalCost": "228069"
							},
							"external": {
								"Balanceof(address)": "2814",
								"deposit()": "infinite",
								"withdraw()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 116,
									"end": 472,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 116,
									"end": 472,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 116,
									"end": 472,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 116,
									"end": 472,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 116,
									"end": 472,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 116,
									"end": 472,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 116,
									"end": 472,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 116,
									"end": 472,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 116,
									"end": 472,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 116,
									"end": 472,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 116,
									"end": 472,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 116,
									"end": 472,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 116,
									"end": 472,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 116,
									"end": 472,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 116,
									"end": 472,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 116,
									"end": 472,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 116,
									"end": 472,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 116,
									"end": 472,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 116,
									"end": 472,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 116,
									"end": 472,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 116,
									"end": 472,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203e412ff92261df0ff4bb9c7fb8433085e4d18de7397731df48c64be03ee3e69a64736f6c634300081a0033",
									".code": [
										{
											"begin": 116,
											"end": 472,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 116,
											"end": 472,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 116,
											"end": 472,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 116,
											"end": 472,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 116,
											"end": 472,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 116,
											"end": 472,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 116,
											"end": 472,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 116,
											"end": 472,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 116,
											"end": 472,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 116,
											"end": 472,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 116,
											"end": 472,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 116,
											"end": 472,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 116,
											"end": 472,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 116,
											"end": 472,
											"name": "PUSH",
											"source": 1,
											"value": "3CCFD60B"
										},
										{
											"begin": 116,
											"end": 472,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 116,
											"end": 472,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 116,
											"end": 472,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 116,
											"end": 472,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 116,
											"end": 472,
											"name": "PUSH",
											"source": 1,
											"value": "78592150"
										},
										{
											"begin": 116,
											"end": 472,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 116,
											"end": 472,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 116,
											"end": 472,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 116,
											"end": 472,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 116,
											"end": 472,
											"name": "PUSH",
											"source": 1,
											"value": "D0E30DB0"
										},
										{
											"begin": 116,
											"end": 472,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 116,
											"end": 472,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 116,
											"end": 472,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 116,
											"end": 472,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 116,
											"end": 472,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 116,
											"end": 472,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 116,
											"end": 472,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 116,
											"end": 472,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 314,
											"end": 469,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 314,
											"end": 469,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 314,
											"end": 469,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 314,
											"end": 469,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 314,
											"end": 469,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 314,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 314,
											"end": 469,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 314,
											"end": 469,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 314,
											"end": 469,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 314,
											"end": 469,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 314,
											"end": 469,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 314,
											"end": 469,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 314,
											"end": 469,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 314,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 314,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 314,
											"end": 469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 314,
											"end": 469,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 314,
											"end": 469,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 314,
											"end": 469,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 176,
											"end": 218,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 176,
											"end": 218,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 176,
											"end": 218,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 176,
											"end": 218,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 176,
											"end": 218,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 176,
											"end": 218,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 176,
											"end": 218,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 176,
											"end": 218,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 176,
											"end": 218,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 176,
											"end": 218,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 176,
											"end": 218,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 176,
											"end": 218,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 176,
											"end": 218,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 176,
											"end": 218,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 176,
											"end": 218,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 176,
											"end": 218,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 176,
											"end": 218,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 176,
											"end": 218,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 176,
											"end": 218,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 176,
											"end": 218,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 176,
											"end": 218,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 176,
											"end": 218,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 176,
											"end": 218,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 176,
											"end": 218,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 176,
											"end": 218,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 176,
											"end": 218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 176,
											"end": 218,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 176,
											"end": 218,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 176,
											"end": 218,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 176,
											"end": 218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 176,
											"end": 218,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 176,
											"end": 218,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 176,
											"end": 218,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 176,
											"end": 218,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 176,
											"end": 218,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 176,
											"end": 218,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 176,
											"end": 218,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 176,
											"end": 218,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 176,
											"end": 218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 176,
											"end": 218,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 176,
											"end": 218,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 176,
											"end": 218,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 176,
											"end": 218,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 176,
											"end": 218,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 176,
											"end": 218,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 176,
											"end": 218,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 176,
											"end": 218,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 176,
											"end": 218,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 224,
											"end": 309,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 224,
											"end": 309,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 224,
											"end": 309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 224,
											"end": 309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 224,
											"end": 309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 224,
											"end": 309,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 224,
											"end": 309,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 224,
											"end": 309,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 314,
											"end": 469,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 314,
											"end": 469,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 351,
											"end": 365,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 366,
											"end": 375,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 366,
											"end": 387,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 376,
											"end": 386,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 366,
											"end": 387,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 366,
											"end": 387,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 366,
											"end": 387,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 366,
											"end": 387,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 366,
											"end": 387,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 366,
											"end": 387,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 366,
											"end": 387,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 366,
											"end": 387,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 366,
											"end": 387,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 366,
											"end": 387,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 366,
											"end": 387,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 366,
											"end": 387,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 366,
											"end": 387,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 366,
											"end": 387,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 366,
											"end": 387,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 366,
											"end": 387,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 351,
											"end": 387,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 351,
											"end": 387,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 394,
											"end": 432,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 425,
											"end": 431,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 403,
											"end": 413,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 394,
											"end": 424,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 394,
											"end": 424,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 394,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 394,
											"end": 424,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 394,
											"end": 432,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 394,
											"end": 432,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 394,
											"end": 432,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 394,
											"end": 432,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 394,
											"end": 432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 394,
											"end": 432,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 394,
											"end": 432,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 461,
											"end": 462,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 439,
											"end": 448,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 439,
											"end": 460,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 449,
											"end": 459,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 439,
											"end": 460,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 439,
											"end": 460,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 439,
											"end": 460,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 439,
											"end": 460,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 439,
											"end": 460,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 439,
											"end": 460,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 439,
											"end": 460,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 439,
											"end": 460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 439,
											"end": 460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 439,
											"end": 460,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 439,
											"end": 460,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 439,
											"end": 460,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 439,
											"end": 460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 439,
											"end": 460,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 439,
											"end": 460,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 439,
											"end": 462,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 439,
											"end": 462,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 439,
											"end": 462,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 439,
											"end": 462,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 342,
											"end": 469,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 314,
											"end": 469,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 176,
											"end": 218,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 176,
											"end": 218,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 176,
											"end": 218,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 176,
											"end": 218,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 176,
											"end": 218,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 176,
											"end": 218,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 176,
											"end": 218,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 176,
											"end": 218,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 176,
											"end": 218,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 176,
											"end": 218,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 176,
											"end": 218,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 176,
											"end": 218,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 176,
											"end": 218,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 176,
											"end": 218,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 176,
											"end": 218,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 176,
											"end": 218,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 176,
											"end": 218,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 176,
											"end": 218,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 176,
											"end": 218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 224,
											"end": 309,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 224,
											"end": 309,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 291,
											"end": 300,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 268,
											"end": 277,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 268,
											"end": 289,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 278,
											"end": 288,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 268,
											"end": 289,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 268,
											"end": 289,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 268,
											"end": 289,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 268,
											"end": 289,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 268,
											"end": 289,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 268,
											"end": 289,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 268,
											"end": 289,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 268,
											"end": 289,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 268,
											"end": 289,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 268,
											"end": 289,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 268,
											"end": 289,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 268,
											"end": 289,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 268,
											"end": 289,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 268,
											"end": 289,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 268,
											"end": 289,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 268,
											"end": 289,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 268,
											"end": 300,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 268,
											"end": 300,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 268,
											"end": 300,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 268,
											"end": 300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 268,
											"end": 300,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 268,
											"end": 300,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 268,
											"end": 300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 268,
											"end": 300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 268,
											"end": 300,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 268,
											"end": 300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 268,
											"end": 300,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 268,
											"end": 300,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 268,
											"end": 300,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 268,
											"end": 300,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 268,
											"end": 300,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 268,
											"end": 300,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 268,
											"end": 300,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 224,
											"end": 309,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1531,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1640,
											"end": 1646,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1616,
											"end": 1637,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 1616,
											"end": 1646,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1721,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1612,
											"end": 1721,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 1708,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "PUSH",
											"source": 0,
											"value": "CD78605900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1669,
											"end": 1710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1721,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1612,
											"end": 1721,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1732,
											"end": 1744,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1750,
											"end": 1759,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1764,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1750,
											"end": 1764,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1772,
											"end": 1778,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1750,
											"end": 1783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1731,
											"end": 1783,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1731,
											"end": 1783,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1731,
											"end": 1783,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1798,
											"end": 1805,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1793,
											"end": 1856,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1793,
											"end": 1856,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1828,
											"end": 1845,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1845,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1828,
											"end": 1845,
											"name": "PUSH",
											"source": 0,
											"value": "1425EA4200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1828,
											"end": 1845,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1828,
											"end": 1845,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1828,
											"end": 1845,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1828,
											"end": 1845,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1828,
											"end": 1845,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1845,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1828,
											"end": 1845,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1828,
											"end": 1845,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1828,
											"end": 1845,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1828,
											"end": 1845,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1828,
											"end": 1845,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1793,
											"end": 1856,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1793,
											"end": 1856,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1602,
											"end": 1862,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1862,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1862,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1213,
											"end": 1220,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1247,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1176,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1346,
											"end": 1370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1341,
											"end": 1344,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1334,
											"end": 1371,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1259,
											"end": 1377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1476,
											"end": 1480,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1516,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1503,
											"end": 1512,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1595,
											"end": 1596,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1593,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1527,
											"end": 1598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1383,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1611,
											"end": 1791,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1611,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1659,
											"end": 1736,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1656,
											"end": 1657,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1649,
											"end": 1737,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1756,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1753,
											"end": 1754,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1746,
											"end": 1761,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1780,
											"end": 1784,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1777,
											"end": 1778,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1770,
											"end": 1785,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1988,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1797,
											"end": 1988,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1837,
											"end": 1840,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1856,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1874,
											"end": 1875,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1856,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1856,
											"end": 1876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1856,
											"end": 1876,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1856,
											"end": 1876,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1876,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1876,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1890,
											"end": 1910,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1908,
											"end": 1909,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1890,
											"end": 1910,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1890,
											"end": 1910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1890,
											"end": 1910,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1890,
											"end": 1910,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1885,
											"end": 1910,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1885,
											"end": 1910,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1933,
											"end": 1934,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1930,
											"end": 1931,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1926,
											"end": 1935,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1919,
											"end": 1935,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1919,
											"end": 1935,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1954,
											"end": 1957,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1951,
											"end": 1952,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1948,
											"end": 1958,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1945,
											"end": 1981,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1945,
											"end": 1981,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1945,
											"end": 1981,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1961,
											"end": 1979,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1961,
											"end": 1979,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1961,
											"end": 1979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1961,
											"end": 1979,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1961,
											"end": 1979,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1945,
											"end": 1981,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1945,
											"end": 1981,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1988,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1988,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1988,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1988,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1988,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1994,
											"end": 2112,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1994,
											"end": 2112,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2105,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2099,
											"end": 2104,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2105,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2081,
											"end": 2105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2105,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2081,
											"end": 2105,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2076,
											"end": 2079,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2106,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1994,
											"end": 2112,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1994,
											"end": 2112,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1994,
											"end": 2112,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2118,
											"end": 2340,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2118,
											"end": 2340,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2211,
											"end": 2215,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2251,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2247,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2252,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2226,
											"end": 2252,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2226,
											"end": 2252,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2262,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2330,
											"end": 2331,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2319,
											"end": 2328,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2315,
											"end": 2332,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2306,
											"end": 2312,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2262,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2262,
											"end": 2333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2262,
											"end": 2333,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2262,
											"end": 2333,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2118,
											"end": 2340,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2118,
											"end": 2340,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2118,
											"end": 2340,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2118,
											"end": 2340,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2118,
											"end": 2340,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2346,
											"end": 2493,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2346,
											"end": 2493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2447,
											"end": 2458,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2484,
											"end": 2487,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2469,
											"end": 2487,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2469,
											"end": 2487,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2346,
											"end": 2493,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2346,
											"end": 2493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2346,
											"end": 2493,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2346,
											"end": 2493,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2346,
											"end": 2493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2499,
											"end": 2613,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 2499,
											"end": 2613,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2499,
											"end": 2613,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2499,
											"end": 2613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2619,
											"end": 3017,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 2619,
											"end": 3017,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2778,
											"end": 2781,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2799,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2880,
											"end": 2881,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2875,
											"end": 2878,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2799,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2799,
											"end": 2882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2799,
											"end": 2882,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2799,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2792,
											"end": 2882,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2792,
											"end": 2882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2891,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2980,
											"end": 2983,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2891,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 2891,
											"end": 2984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2891,
											"end": 2984,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2891,
											"end": 2984,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3009,
											"end": 3010,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3007,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3000,
											"end": 3011,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2993,
											"end": 3011,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2993,
											"end": 3011,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2619,
											"end": 3017,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2619,
											"end": 3017,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2619,
											"end": 3017,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2619,
											"end": 3017,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3023,
											"end": 3402,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3023,
											"end": 3402,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3207,
											"end": 3210,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3229,
											"end": 3376,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3372,
											"end": 3375,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3229,
											"end": 3376,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3229,
											"end": 3376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3229,
											"end": 3376,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3229,
											"end": 3376,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3222,
											"end": 3376,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3222,
											"end": 3376,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3396,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3386,
											"end": 3396,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3386,
											"end": 3396,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3023,
											"end": 3402,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3023,
											"end": 3402,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3023,
											"end": 3402,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3023,
											"end": 3402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/Address.sol",
								"contracts/Bank.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"Balanceof(address)": "78592150",
							"deposit()": "d0e30db0",
							"withdraw()": "3ccfd60b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"Balanceof\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Bank.sol\":\"Bank\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"contracts/Bank.sol\":{\"keccak256\":\"0x0ed17ba625a8781e9e9f89beb9904936224ea7427b733c01b58dded00cd85fdb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b606ec0361c0842679851492ef5625c286fd2b263a6e9f492af0cb29bcdeda41\",\"dweb:/ipfs/QmRpJKhYnuyXBwiSqzm1FTPEN385UCA9eJxJS5utUwBy7k\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 262,
								"contract": "contracts/Bank.sol:Bank",
								"label": "Balanceof",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							252
						]
					},
					"id": 253,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "127:67:0",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 252,
							"linearizedBaseContracts": [
								252
							],
							"name": "Address",
							"nameLocation": "203:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "217:94:0",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cd786059",
									"id": 7,
									"name": "AddressInsufficientBalance",
									"nameLocation": "322:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "357:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 7,
												"src": "349:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:17:0"
									},
									"src": "316:50:0"
								},
								{
									"documentation": {
										"id": 8,
										"nodeType": "StructuredDocumentation",
										"src": "372:75:0",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 12,
									"name": "AddressEmptyCode",
									"nameLocation": "458:16:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "483:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "475:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 9,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:16:0"
									},
									"src": "452:39:0"
								},
								{
									"documentation": {
										"id": 13,
										"nodeType": "StructuredDocumentation",
										"src": "497:89:0",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "1425ea42",
									"id": 15,
									"name": "FailedInnerCall",
									"nameLocation": "597:15:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "612:2:0"
									},
									"src": "591:24:0"
								},
								{
									"body": {
										"id": 55,
										"nodeType": "Block",
										"src": "1602:260:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 29,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 25,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1624:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$252",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$252",
																		"typeString": "library Address"
																	}
																],
																"id": 24,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1616:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 23,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1616:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 26,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1616:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 27,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1630:7:0",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1616:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 28,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "1640:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1616:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 38,
												"nodeType": "IfStatement",
												"src": "1612:109:0",
												"trueBody": {
													"id": 37,
													"nodeType": "Block",
													"src": "1648:73:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 33,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1704:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$252",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$252",
																					"typeString": "library Address"
																				}
																			],
																			"id": 32,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1696:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 31,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1696:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 34,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1696:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 30,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 7,
																	"src": "1669:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 35,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1669:41:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 36,
															"nodeType": "RevertStatement",
															"src": "1662:48:0"
														}
													]
												}
											},
											{
												"assignments": [
													40,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 40,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1737:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 55,
														"src": "1732:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 39,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1732:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 47,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 45,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1780:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 41,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 18,
																"src": "1750:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 42,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1760:4:0",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1750:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 44,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 43,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 20,
																"src": "1772:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1750:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 46,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1731:52:0"
											},
											{
												"condition": {
													"id": 49,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1797:8:0",
													"subExpression": {
														"id": 48,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 40,
														"src": "1798:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 54,
												"nodeType": "IfStatement",
												"src": "1793:63:0",
												"trueBody": {
													"id": 53,
													"nodeType": "Block",
													"src": "1807:49:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 50,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "1828:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 51,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1828:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 52,
															"nodeType": "RevertStatement",
															"src": "1821:24:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 16,
										"nodeType": "StructuredDocumentation",
										"src": "621:905:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 56,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1540:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1566:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 56,
												"src": "1550:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 17,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1550:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1585:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 56,
												"src": "1577:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 19,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1577:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:43:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:0:0"
									},
									"scope": 252,
									"src": "1531:331:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 72,
										"nodeType": "Block",
										"src": "2794:62:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 67,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 59,
															"src": "2833:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 68,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 61,
															"src": "2841:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 69,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2847:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 66,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 119,
														"src": "2811:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 70,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 65,
												"id": 71,
												"nodeType": "Return",
												"src": "2804:45:0"
											}
										]
									},
									"documentation": {
										"id": 57,
										"nodeType": "StructuredDocumentation",
										"src": "1868:832:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 73,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2714:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2735:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 73,
												"src": "2727:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2756:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 73,
												"src": "2743:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 60,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2743:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2726:35:0"
									},
									"returnParameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 73,
												"src": "2780:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 63,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2779:14:0"
									},
									"scope": 252,
									"src": "2705:151:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 118,
										"nodeType": "Block",
										"src": "3293:279:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 91,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 87,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3315:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$252",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$252",
																		"typeString": "library Address"
																	}
																],
																"id": 86,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3307:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 85,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3307:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 88,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3307:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 89,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3321:7:0",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3307:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 90,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "3331:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3307:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 100,
												"nodeType": "IfStatement",
												"src": "3303:108:0",
												"trueBody": {
													"id": 99,
													"nodeType": "Block",
													"src": "3338:73:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 95,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3394:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$252",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$252",
																					"typeString": "library Address"
																				}
																			],
																			"id": 94,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3386:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 93,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3386:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 96,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3386:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 92,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 7,
																	"src": "3359:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 97,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3359:41:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 98,
															"nodeType": "RevertStatement",
															"src": "3352:48:0"
														}
													]
												}
											},
											{
												"assignments": [
													102,
													104
												],
												"declarations": [
													{
														"constant": false,
														"id": 102,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3426:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 118,
														"src": "3421:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 101,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3421:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 104,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3448:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 118,
														"src": "3435:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 103,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3435:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 111,
												"initialValue": {
													"arguments": [
														{
															"id": 109,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 78,
															"src": "3488:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 105,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 76,
																"src": "3462:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 106,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3469:4:0",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3462:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 108,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 107,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 80,
																"src": "3481:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3462:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3462:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3420:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 113,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 76,
															"src": "3537:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 114,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 102,
															"src": "3545:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 115,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 104,
															"src": "3554:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 112,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 211,
														"src": "3510:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3510:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 84,
												"id": 117,
												"nodeType": "Return",
												"src": "3503:62:0"
											}
										]
									},
									"documentation": {
										"id": 74,
										"nodeType": "StructuredDocumentation",
										"src": "2862:313:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 119,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "3189:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3219:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "3211:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 75,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3211:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3240:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "3227:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 77,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3227:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3254:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "3246:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 79,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3246:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3210:50:0"
									},
									"returnParameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "3279:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 82,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3279:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3278:14:0"
									},
									"scope": 252,
									"src": "3180:392:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 144,
										"nodeType": "Block",
										"src": "3811:154:0",
										"statements": [
											{
												"assignments": [
													130,
													132
												],
												"declarations": [
													{
														"constant": false,
														"id": 130,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3827:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 144,
														"src": "3822:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 129,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3822:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 132,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3849:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 144,
														"src": "3836:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 131,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3836:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 137,
												"initialValue": {
													"arguments": [
														{
															"id": 135,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 124,
															"src": "3881:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 133,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 122,
															"src": "3863:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 134,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3870:10:0",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3863:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3863:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3821:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 139,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 122,
															"src": "3930:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 140,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 130,
															"src": "3938:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 141,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 132,
															"src": "3947:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 138,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 211,
														"src": "3903:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3903:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 128,
												"id": 143,
												"nodeType": "Return",
												"src": "3896:62:0"
											}
										]
									},
									"documentation": {
										"id": 120,
										"nodeType": "StructuredDocumentation",
										"src": "3578:128:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 145,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3720:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3747:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "3739:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3768:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "3755:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 123,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3755:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:35:0"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "3797:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 126,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3797:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:14:0"
									},
									"scope": 252,
									"src": "3711:254:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 170,
										"nodeType": "Block",
										"src": "4203:156:0",
										"statements": [
											{
												"assignments": [
													156,
													158
												],
												"declarations": [
													{
														"constant": false,
														"id": 156,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4219:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 170,
														"src": "4214:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 155,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4214:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 158,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4241:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 170,
														"src": "4228:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 157,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4228:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 163,
												"initialValue": {
													"arguments": [
														{
															"id": 161,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4275:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 159,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 148,
															"src": "4255:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 160,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4262:12:0",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4255:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4255:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4213:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 165,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 148,
															"src": "4324:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 166,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 156,
															"src": "4332:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 167,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 158,
															"src": "4341:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 164,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 211,
														"src": "4297:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4297:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 154,
												"id": 169,
												"nodeType": "Return",
												"src": "4290:62:0"
											}
										]
									},
									"documentation": {
										"id": 146,
										"nodeType": "StructuredDocumentation",
										"src": "3971:130:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 171,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "4115:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4144:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "4136:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4136:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4165:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "4152:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 149,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4152:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4135:35:0"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "4189:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 152,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4189:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:14:0"
									},
									"scope": 252,
									"src": "4106:253:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 210,
										"nodeType": "Block",
										"src": "4783:424:0",
										"statements": [
											{
												"condition": {
													"id": 184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4797:8:0",
													"subExpression": {
														"id": 183,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "4798:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 208,
													"nodeType": "Block",
													"src": "4857:344:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 199,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 193,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 190,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 178,
																			"src": "5045:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 191,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5056:6:0",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5045:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 192,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5066:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5045:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 198,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 194,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 174,
																				"src": "5071:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 195,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5078:4:0",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "5071:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 196,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5083:6:0",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5071:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 197,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5093:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5071:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5045:49:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 205,
															"nodeType": "IfStatement",
															"src": "5041:119:0",
															"trueBody": {
																"id": 204,
																"nodeType": "Block",
																"src": "5096:64:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 201,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 174,
																					"src": "5138:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 200,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 12,
																				"src": "5121:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 202,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5121:24:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 203,
																		"nodeType": "RevertStatement",
																		"src": "5114:31:0"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 206,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 178,
																"src": "5180:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 182,
															"id": 207,
															"nodeType": "Return",
															"src": "5173:17:0"
														}
													]
												},
												"id": 209,
												"nodeType": "IfStatement",
												"src": "4793:408:0",
												"trueBody": {
													"id": 189,
													"nodeType": "Block",
													"src": "4807:44:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 186,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 178,
																		"src": "4829:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 185,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 251,
																	"src": "4821:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 187,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4821:19:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 188,
															"nodeType": "ExpressionStatement",
															"src": "4821:19:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "4365:255:0",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."
									},
									"id": 211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4634:26:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4678:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "4670:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4670:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4699:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "4694:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 175,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4694:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4729:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "4716:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 177,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4716:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4660:85:0"
									},
									"returnParameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "4769:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 180,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4769:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:14:0"
									},
									"scope": 252,
									"src": "4625:582:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 232,
										"nodeType": "Block",
										"src": "5509:122:0",
										"statements": [
											{
												"condition": {
													"id": 222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5523:8:0",
													"subExpression": {
														"id": 221,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 214,
														"src": "5524:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 230,
													"nodeType": "Block",
													"src": "5583:42:0",
													"statements": [
														{
															"expression": {
																"id": 228,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 216,
																"src": "5604:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 220,
															"id": 229,
															"nodeType": "Return",
															"src": "5597:17:0"
														}
													]
												},
												"id": 231,
												"nodeType": "IfStatement",
												"src": "5519:106:0",
												"trueBody": {
													"id": 227,
													"nodeType": "Block",
													"src": "5533:44:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 224,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 216,
																		"src": "5555:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 223,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 251,
																	"src": "5547:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 225,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5547:19:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 226,
															"nodeType": "ExpressionStatement",
															"src": "5547:19:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "5213:189:0",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."
									},
									"id": 233,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5416:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5438:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "5433:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 213,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5433:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5460:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "5447:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 215,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5447:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5432:39:0"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "5495:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 218,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5495:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5494:14:0"
									},
									"scope": 252,
									"src": "5407:224:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 250,
										"nodeType": "Block",
										"src": "5798:461:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 239,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 236,
															"src": "5874:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 240,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5885:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5874:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 241,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5894:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5874:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 248,
													"nodeType": "Block",
													"src": "6204:49:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 245,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "6225:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6225:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 247,
															"nodeType": "RevertStatement",
															"src": "6218:24:0"
														}
													]
												},
												"id": 249,
												"nodeType": "IfStatement",
												"src": "5870:383:0",
												"trueBody": {
													"id": 244,
													"nodeType": "Block",
													"src": "5897:301:0",
													"statements": [
														{
															"AST": {
																"nativeSrc": "6055:133:0",
																"nodeType": "YulBlock",
																"src": "6055:133:0",
																"statements": [
																	{
																		"nativeSrc": "6073:40:0",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6073:40:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "6102:10:0",
																					"nodeType": "YulIdentifier",
																					"src": "6102:10:0"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "6096:5:0",
																				"nodeType": "YulIdentifier",
																				"src": "6096:5:0"
																			},
																			"nativeSrc": "6096:17:0",
																			"nodeType": "YulFunctionCall",
																			"src": "6096:17:0"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "6077:15:0",
																				"nodeType": "YulTypedName",
																				"src": "6077:15:0",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6141:2:0",
																							"nodeType": "YulLiteral",
																							"src": "6141:2:0",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "6145:10:0",
																							"nodeType": "YulIdentifier",
																							"src": "6145:10:0"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6137:3:0",
																						"nodeType": "YulIdentifier",
																						"src": "6137:3:0"
																					},
																					"nativeSrc": "6137:19:0",
																					"nodeType": "YulFunctionCall",
																					"src": "6137:19:0"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "6158:15:0",
																					"nodeType": "YulIdentifier",
																					"src": "6158:15:0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6130:6:0",
																				"nodeType": "YulIdentifier",
																				"src": "6130:6:0"
																			},
																			"nativeSrc": "6130:44:0",
																			"nodeType": "YulFunctionCall",
																			"src": "6130:44:0"
																		},
																		"nativeSrc": "6130:44:0",
																		"nodeType": "YulExpressionStatement",
																		"src": "6130:44:0"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "london",
															"externalReferences": [
																{
																	"declaration": 236,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6102:10:0",
																	"valueSize": 1
																},
																{
																	"declaration": 236,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6145:10:0",
																	"valueSize": 1
																}
															],
															"id": 243,
															"nodeType": "InlineAssembly",
															"src": "6046:142:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 234,
										"nodeType": "StructuredDocumentation",
										"src": "5637:101:0",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."
									},
									"id": 251,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5752:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5773:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "5760:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 235,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5760:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5759:25:0"
									},
									"returnParameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5798:0:0"
									},
									"scope": 252,
									"src": "5743:516:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 253,
							"src": "195:6066:0",
							"usedErrors": [
								7,
								12,
								15
							],
							"usedEvents": []
						}
					],
					"src": "101:6161:0"
				},
				"id": 0
			},
			"contracts/Bank.sol": {
				"ast": {
					"absolutePath": "contracts/Bank.sol",
					"exportedSymbols": {
						"Address": [
							252
						],
						"Bank": [
							302
						]
					},
					"id": 303,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 254,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".22"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "@openzeppelin/contracts/utils/Address.sol",
							"id": 255,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 303,
							"sourceUnit": 253,
							"src": "59:51:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Bank",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 302,
							"linearizedBaseContracts": [
								302
							],
							"name": "Bank",
							"nameLocation": "125:4:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 258,
									"libraryName": {
										"id": 256,
										"name": "Address",
										"nameLocations": [
											"143:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 252,
										"src": "143:7:1"
									},
									"nodeType": "UsingForDirective",
									"src": "137:34:1",
									"typeName": {
										"id": 257,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "155:15:1",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "78592150",
									"id": 262,
									"mutability": "mutable",
									"name": "Balanceof",
									"nameLocation": "209:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 302,
									"src": "176:42:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 261,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 259,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "185:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "176:26:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 260,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "194:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 273,
										"nodeType": "Block",
										"src": "259:50:1",
										"statements": [
											{
												"expression": {
													"id": 271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 265,
															"name": "Balanceof",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 262,
															"src": "268:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 268,
														"indexExpression": {
															"expression": {
																"id": 266,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "278:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 267,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "282:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "278:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "268:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 269,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "291:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 270,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "295:5:1",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "291:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "268:32:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 272,
												"nodeType": "ExpressionStatement",
												"src": "268:32:1"
											}
										]
									},
									"functionSelector": "d0e30db0",
									"id": 274,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "233:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "240:2:1"
									},
									"returnParameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "259:0:1"
									},
									"scope": 302,
									"src": "224:85:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 300,
										"nodeType": "Block",
										"src": "342:127:1",
										"statements": [
											{
												"assignments": [
													278
												],
												"declarations": [
													{
														"constant": false,
														"id": 278,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "359:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 300,
														"src": "351:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 277,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "351:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 283,
												"initialValue": {
													"baseExpression": {
														"id": 279,
														"name": "Balanceof",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 262,
														"src": "366:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 282,
													"indexExpression": {
														"expression": {
															"id": 280,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "376:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 281,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "380:6:1",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "376:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "366:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "351:36:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 290,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 278,
															"src": "425:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 286,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "403:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 287,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "407:6:1",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "403:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 285,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "394:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 284,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "394:9:1",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "394:20:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 289,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "415:9:1",
														"memberName": "sendValue",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 56,
														"src": "394:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$attached_to$_t_address_payable_$",
															"typeString": "function (address payable,uint256)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "394:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 292,
												"nodeType": "ExpressionStatement",
												"src": "394:38:1"
											},
											{
												"expression": {
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 293,
															"name": "Balanceof",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 262,
															"src": "439:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 296,
														"indexExpression": {
															"expression": {
																"id": 294,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "449:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "453:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "449:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "439:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 297,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "461:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "439:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 299,
												"nodeType": "ExpressionStatement",
												"src": "439:23:1"
											}
										]
									},
									"functionSelector": "3ccfd60b",
									"id": 301,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "323:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "331:2:1"
									},
									"returnParameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "342:0:1"
									},
									"scope": 302,
									"src": "314:155:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 303,
							"src": "116:356:1",
							"usedErrors": [
								7,
								15
							],
							"usedEvents": []
						}
					],
					"src": "33:439:1"
				},
				"id": 1
			}
		}
	}
}